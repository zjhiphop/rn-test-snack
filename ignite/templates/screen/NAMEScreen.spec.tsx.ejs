---
destinationDir: app/screens/specs
---
// https://reactnativetesting.io/component/testing/
import { RouteProp } from "@react-navigation/native"
import { render } from "@testing-library/react-native"
import React from "react"
import { SafeAreaProvider } from "react-native-safe-area-context"
import renderer from "react-test-renderer"
import { AppStackParamList } from "../../navigators"
import { <%= props.pascalCaseName %>Screen, <%= props.pascalCaseName %>ScreenComponent } from "../<%= props.pascalCaseName %>Screen"

describe("<%= props.pascalCaseName %>", () => {
  it("renders <%= props.pascalCaseName %>ScreenComponent component", () => {
    const screen = render(<<%= props.pascalCaseName %>ScreenComponent></<%= props.pascalCaseName %>ScreenComponent>)
    expect(screen.getByText("<%= props.pascalCaseName %>")).toBeTruthy()
  })

  it("Renders Snapshot correctly", () => {
    const tree = renderer
      .create(
          <<%= props.pascalCaseName %>ScreenComponent></<%= props.pascalCaseName %>ScreenComponent>
      )
      .toJSON()
    expect(tree).toMatchSnapshot()
  })

  describe("Renders screen", () => {
    let navigation
    const route: RouteProp<AppStackParamList, "<%= props.pascalCaseName %>"> = {
      key: "<%= props.pascalCaseName %>Screen",
      name: "<%= props.pascalCaseName %>",
    }

    beforeEach(() => {
      navigation = {
        dispatch: jest.fn(),
      }
    })

    test("Test <%= props.pascalCaseName %>Screen", () => {
      const tree = renderer
        .create(
          <SafeAreaProvider>
            <<%= props.pascalCaseName %>Screen navigation={navigation} route={route} />
          </SafeAreaProvider>,
        )
        .toJSON()
      expect(tree).toMatchSnapshot()
    })
  })

})
